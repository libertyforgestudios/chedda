(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const h of document.querySelectorAll('link[rel="modulepreload"]'))o(h);new MutationObserver(h=>{for(const n of h)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function s(h){const n={};return h.integrity&&(n.integrity=h.integrity),h.referrerPolicy&&(n.referrerPolicy=h.referrerPolicy),h.crossOrigin==="use-credentials"?n.credentials="include":h.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(h){if(h.ep)return;h.ep=!0;const n=s(h);fetch(h.href,n)}})();class y{constructor(e,s){this.scene=e,this.name=s.name,this.health=s.health,this.maxHealth=s.health,this.speed=s.speed||100,this.movementPattern=s.movementPattern||"horizontal",this.attackPatterns=s.attackPatterns||[],this.defense=s.defense||{type:"none",value:0},this.spriteKey=s.spriteKey||"boss_default",this.scale=s.scale||1,this.sprite=null,this.healthBar=null,this.attackTimers=[],this.isActive=!1,this.position={x:400,y:50},this.movementAngle=0,this.originalSpeed=this.speed}spawn(){this.sprite=this.scene.physics.add.sprite(this.position.x,this.position.y,this.spriteKey).setScale(this.scale).setCollideWorldBounds(!0).setImmovable(!0).setPushable(!1),this.healthBar=this.scene.add.rectangle(400,20,400,10,16711680).setOrigin(.5,.5),this.isActive=!0,this.attackPatterns.forEach(e=>{this.attackTimers.push(this.scene.time.addEvent({delay:e.delay,callback:()=>this.executeAttack(e),callbackScope:this,loop:!0}))}),this.scene.time.addEvent({delay:16,callback:this.updateMovement,callbackScope:this,loop:!0})}updateMovement(){if(this.isActive){switch((!this.sprite||!this.sprite.active)&&(console.log(`${this.name} sprite was destroyed, recreating...`),this.sprite=this.scene.physics.add.sprite(this.position.x,this.position.y,this.spriteKey).setScale(this.scale).setCollideWorldBounds(!0).setImmovable(!0).setPushable(!1),this.speed=this.originalSpeed,this.scene.updateBossOverlap&&this.scene.updateBossOverlap(this)),this.movementPattern){case"horizontal":this.position.x+=this.speed*.016,(this.position.x>750||this.position.x<50)&&(this.speed*=-1);break;case"oscillate":this.movementAngle+=.05,this.position.x=400+Math.sin(this.movementAngle)*200;break;case"stationary":break;case"teleport":this.scene.time.now%3e3<16&&(this.position.x=Phaser.Math.Between(100,700));break;case"figure8":this.movementAngle+=.03,this.position.x=400+Math.sin(this.movementAngle)*150,this.position.y=150+Math.sin(this.movementAngle*2)*100;break;case"spiral":this.movementAngle+=.05,this.position.x=400+Math.cos(this.movementAngle)*100,this.position.y=50+Math.sin(this.movementAngle)*100;break;case"erratic":this.scene.time.now%1e3<16&&(this.position.x+=Phaser.Math.Between(-100,100),this.position.y+=Phaser.Math.Between(-50,50),this.position.x=Phaser.Math.Clamp(this.position.x,50,750),this.position.y=Phaser.Math.Clamp(this.position.y,50,250));break}this.sprite.setPosition(this.position.x,this.position.y),this.sprite.setActive(!0).setVisible(!0)}}executeAttack(e){if(this.isActive)switch(e.type){case"vertical":let s=this.scene.physics.add.sprite(this.position.x,this.position.y+50,"blade").setScale(.3).setVelocityY(e.velocity);this.scene.physics.add.overlap(this.scene.robot,s,()=>{this.scene.health-=e.damage,s.destroy(),this.scene.updateHealthBar()});break;case"spread":for(let a=0;a<e.count;a++){let l=90-e.spread/2+a*e.spread/(e.count-1),d=Phaser.Math.DegToRad(l),u=this.scene.physics.add.sprite(this.position.x,this.position.y+50,"glob").setVelocity(e.velocity*Math.cos(d),e.velocity*Math.sin(d));this.scene.physics.add.overlap(this.scene.robot,u,()=>{this.scene.health-=e.damage,u.destroy(),this.scene.updateHealthBar()})}break;case"radial":for(let a=0;a<e.count;a++){let l=a*360/e.count,d=Phaser.Math.DegToRad(l),u=this.scene.physics.add.sprite(this.position.x,this.position.y,"shard").setVelocity(e.velocity*Math.cos(d),e.velocity*Math.sin(d));this.scene.physics.add.overlap(this.scene.robot,u,()=>{this.scene.health-=e.damage,u.destroy(),this.scene.updateHealthBar()})}break;case"minions":for(let a=0;a<e.count;a++){let l=this.scene.physics.add.sprite(Phaser.Math.Between(50,750),0,"chedda").setScale(e.scale).setVelocityY(e.velocity);l.health=e.health,this.scene.physics.add.collider(this.scene.bullets,l,(d,u)=>{d.destroy(),u.health-=1,u.health<=0&&u.destroy()}),this.scene.physics.add.overlap(this.scene.robot,l,()=>{this.scene.health-=e.damage,l.destroy(),this.scene.updateHealthBar()})}break;case"wave":let o=this.scene.physics.add.sprite(400,this.position.y,"wave").setDisplaySize(800,20).setVelocityY(e.velocity);this.scene.physics.add.overlap(this.scene.robot,o,()=>{this.scene.health-=e.damage,o.destroy(),this.scene.updateHealthBar()}),this.scene.time.delayedCall(1e3,()=>{if(o.active){o.destroy();for(let a=0;a<3;a++){let l=this.scene.add.rectangle(200+a*200,o.y,100,20,0);this.scene.time.delayedCall(2e3,()=>l.destroy())}}});break;case"homing":for(let a=0;a<e.count;a++){let l=this.scene.physics.add.sprite(this.position.x,this.position.y,"hole"),d=Phaser.Math.Angle.Between(l.x,l.y,this.scene.robot.x,this.scene.robot.y);l.setVelocity(e.velocity*Math.cos(d),e.velocity*Math.sin(d)),this.scene.physics.add.overlap(this.scene.robot,l,()=>{this.scene.health-=e.damage,l.destroy(),this.scene.updateHealthBar()}),this.scene.time.delayedCall(2e3,()=>{l.active&&l.destroy()})}break;case"bouncing":for(let a=0;a<e.count;a++){let l=this.scene.physics.add.sprite(this.position.x+Phaser.Math.Between(-50,50),this.position.y,"ball").setVelocity(Phaser.Math.Between(-100,100),e.velocity).setBounce(1).setCollideWorldBounds(!0);this.scene.physics.add.overlap(this.scene.robot,l,()=>{this.scene.health-=e.damage,l.destroy(),this.scene.updateHealthBar()}),this.scene.time.delayedCall(5e3,()=>{l.active&&l.destroy()})}break;case"laser":let h=this.scene.physics.add.sprite(this.position.x,this.position.y+50,"laser").setDisplaySize(10,600).setVelocityX(e.velocity*(Math.random()>.5?1:-1));this.scene.physics.add.overlap(this.scene.robot,h,()=>{this.scene.health-=e.damage,this.scene.updateHealthBar()}),this.scene.time.delayedCall(2e3,()=>{h.active&&h.destroy()});break;case"spiral":for(let a=0;a<e.count;a++){let l=this.movementAngle+a*360/e.count,d=Phaser.Math.DegToRad(l),u=this.scene.physics.add.sprite(this.position.x,this.position.y,"proj").setVelocity(e.velocity*Math.cos(d),e.velocity*Math.sin(d));this.scene.physics.add.overlap(this.scene.robot,u,()=>{this.scene.health-=e.damage,u.destroy(),this.scene.updateHealthBar()})}break;case"cloud":let n=this.scene.physics.add.sprite(this.scene.robot.x,this.scene.robot.y,"cloud").setDisplaySize(200,200);this.scene.physics.add.overlap(this.scene.robot,n,()=>{this.scene.health-=e.damage,this.scene.updateHealthBar()}),this.scene.time.delayedCall(4e3,()=>{n.active&&n.destroy()});break}}takeDamage(e){if(this.isActive){if(console.log(`Entering takeDamage for ${this.name}, current health: ${this.health}`),this.defense.type==="reduction"&&this.defense.active)e*=1-this.defense.value;else if(this.defense.type==="dodge"&&Math.random()<this.defense.value){console.log(`${this.name} dodged the attack!`);return}else if(this.defense.type==="invulnerable"&&this.defense.active){console.log(`${this.name} is invulnerable!`);return}this.health-=e,console.log(`${this.name} took ${e} damage, health remaining: ${this.health}`),this.healthBar.width=this.health/this.maxHealth*400,this.defense.type==="reduction"&&this.health%50===0&&this.health>0?(this.defense.active=!0,this.scene.time.delayedCall(5e3,()=>{this.defense.active=!1})):this.defense.type==="invulnerable"&&this.health%50===0&&this.health>0&&(this.defense.active=!0,this.scene.time.delayedCall(1e3,()=>{this.defense.active=!1})),this.health<=0&&(this.health=0,console.log(`${this.name} defeated!`),this.destroy())}}destroy(){this.isActive=!1,this.sprite&&this.sprite.destroy(),this.healthBar&&this.healthBar.destroy(),this.attackTimers.forEach(s=>s.remove());let e=this.scene.physics.add.sprite(this.position.x,this.position.y,"health_badge").setScale(.5).setVelocityY(100);this.scene.physics.add.overlap(this.scene.robot,e,()=>{this.scene.health+=20,e.destroy(),this.scene.updateHealthBar()}),this.scene.megaCharge=100,this.scene.updateMegaBar()}}const H={type:Phaser.AUTO,width:800,height:600,parent:"game-container",physics:{default:"arcade",arcade:{gravity:{y:0}}},scene:{preload:z,create:R,update:_}};new Phaser.Game(H);let i,c,x,S,D,T,C,A,B=0,b=100,p=1,$=1,P,v,K=0,g=0,r=null,m=1,f=null,M=null;const Y=250,O=[new y(null,{name:"Cheddar Slicer",health:50,speed:100,movementPattern:"horizontal",attackPatterns:[{type:"vertical",delay:2e3,velocity:100,damage:10}],spriteKey:"boss1"}),new y(null,{name:"Melted Marauder",health:75,speed:150,movementPattern:"oscillate",attackPatterns:[{type:"spread",delay:3e3,count:3,spread:90,velocity:150,damage:10}],spriteKey:"boss2"}),new y(null,{name:"Grater Goliath",health:100,movementPattern:"stationary",attackPatterns:[{type:"radial",delay:4e3,count:8,velocity:200,damage:15}],spriteKey:"boss3"}),new y(null,{name:"Curd Crusader",health:125,speed:200,movementPattern:"horizontal",attackPatterns:[{type:"minions",delay:5e3,count:2,scale:.096,health:1,velocity:100,damage:5}],spriteKey:"boss4"}),new y(null,{name:"Fondue Fiend",health:150,speed:50,movementPattern:"horizontal",attackPatterns:[{type:"wave",delay:6e3,velocity:50,damage:20}],spriteKey:"boss5"}),new y(null,{name:"Swiss Sentinel",health:175,movementPattern:"teleport",attackPatterns:[{type:"homing",delay:4e3,count:5,velocity:100,damage:15}],spriteKey:"boss6"}),new y(null,{name:"Gouda Golem",health:200,speed:150,movementPattern:"figure8",attackPatterns:[{type:"bouncing",delay:5e3,count:4,velocity:200,damage:20}],spriteKey:"boss7"}),new y(null,{name:"Brie Behemoth",health:250,movementPattern:"stationary",attackPatterns:[{type:"laser",delay:3e3,velocity:200,damage:25},{type:"minions",delay:6e3,count:3,scale:.16,health:2,velocity:100,damage:10}],defense:{type:"reduction",value:.5,active:!1},spriteKey:"boss8"}),new y(null,{name:"Roquefort Ravager",health:300,speed:200,movementPattern:"spiral",attackPatterns:[{type:"spiral",delay:2e3,count:6,velocity:250,damage:20},{type:"cloud",delay:8e3,damage:10}],defense:{type:"invulnerable",active:!1},spriteKey:"boss9"}),new y(null,{name:"Parmesan Phantom",health:400,speed:300,movementPattern:"erratic",attackPatterns:[{type:"spread",delay:3e3,count:10,spread:180,velocity:300,damage:25},{type:"minions",delay:6e3,count:5,scale:.224,health:4,velocity:100,damage:15}],defense:{type:"dodge",value:.25},spriteKey:"boss10"})];function z(){this.load.spritesheet("robot","/assets/robot.png",{frameWidth:100,frameHeight:100}),this.load.image("bullet","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("chedda","/assets/cheese_block_200.png"),this.load.image("sr_badge","https://labs.phaser.io/assets/sprites/diamond.png"),this.load.image("cr_badge","https://labs.phaser.io/assets/sprites/coin.png"),this.load.image("health_badge","/assets/heart.png"),this.load.image("background","/assets/background.png");for(let t=1;t<=10;t++)this.load.image(`boss${t}`,`/assets/boss${t}.png`);this.load.image("blade","/assets/blade.png"),this.load.image("glob","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("shard","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("wave","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("hole","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("ball","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("laser","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("proj","https://labs.phaser.io/assets/sprites/bullet.png"),this.load.image("cloud","https://labs.phaser.io/assets/sprites/bullet.png")}function R(){this.add.image(400,300,"background").setScale(.5208),i=this.physics.add.sprite(400,550,"robot",0).setScale(.75).setCollideWorldBounds(!0),c=this.physics.add.group(),x=this.physics.add.group(),S=this.physics.add.group(),D=this.add.text(10,10,"$CHEDDA: 0",{fontSize:"20px",color:"#fff"}),T=this.add.text(10,40,"Blaster: OG Single",{fontSize:"20px",color:"#fff"}),C=this.add.rectangle(400,25,400,20,65280).setOrigin(.5,.5),A=this.add.rectangle(780,300,20,200,255).setOrigin(.5,.5),this.cursors=this.input.keyboard.createCursorKeys(),this.spaceKey=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE),this.bKey=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.B),v=this.time.addEvent({delay:2e3,callback:L,callbackScope:this,loop:!0}),this.time.addEvent({delay:16600,callback:N,callbackScope:this,loop:!0}),this.physics.add.collider(c,x,F,null,this),this.physics.add.overlap(i,S,W,null,this),this.physics.add.overlap(i,x,I,null,this),this.robot=i,this.bullets=c,this.health=b,this.megaCharge=g,this.updateMegaBar=V.bind(this),this.updateHealthBar=w.bind(this),this.updateBossOverlap=E.bind(this)}function _(t){let e=p===4?350:this.spaceKey.isDown?200:300;this.cursors.left.isDown?i.setVelocityX(-e):this.cursors.right.isDown?i.setVelocityX(e):i.setVelocityX(0),this.spaceKey.isDown&&t-K>=Y&&(G.call(this),K=t),Phaser.Input.Keyboard.JustDown(this.bKey)&&g>=100&&p<4&&(P&&P.remove(),$=p,k(4),g=0,V(),P=this.time.delayedCall(1e4,()=>k($),[],this)),x.children.iterate(s=>{s&&s.active&&s.y>600&&(this.health-=s.value*2,s.destroy(),w(),k(1))}),c.children.iterate(s=>{s&&s.active&&s.y<0&&s.destroy()}),console.log(`Spawn check - currentBoss: ${!!r}, wallet: ${B}, bossNumber: ${m}, threshold: ${50*m}`),!r&&B>=50*m&&(console.log(`Spawning boss ${m}: ${O[m-1].name}`),v.paused=!0,r=O[m-1],r.scene=this,r.spawn(),f&&f.destroy(),f=this.physics.add.overlap(c,r.sprite,(s,o)=>{r&&r.isActive&&(s.destroy(),r.takeDamage(1),console.log(`Boss hit, health: ${r.health}, active: ${r.isActive}`))})),r&&(console.log(`Boss state - health: ${r.health}, active: ${r.isActive}, sprite exists: ${r.sprite&&r.sprite.active}`),!r.isActive&&!M&&(console.log(`Boss defeated, scheduling chedda resume in 30s, timer paused: ${v.paused}`),M=this.time.delayedCall(3e3,()=>{m===10?(console.log("Victory! All bosses defeated!"),this.scene.pause(),this.add.text(400,300,`VICTORY!
All Bosses Defeated!`,{fontSize:"48px",color:"#fff",align:"center"}).setOrigin(.5),v.paused=!0):(v.paused=!1,m=Math.min(m+1,10),console.log(`Chedda timer resumed, paused: ${v.paused}, bossNumber: ${m}, wallet: ${B}`)),f&&f.destroy(),f=null,r=null,M=null},[],this))),b=Math.max(0,Math.min(100,this.health)),w(),b<=0&&(this.scene.pause(),this.add.text(400,300,"GAME OVER",{fontSize:"48px",color:"#fff"}).setOrigin(.5))}function E(t){f&&f.destroy(),f=this.physics.add.overlap(this.bullets,t.sprite,(e,s)=>{t&&t.isActive&&(e.destroy(),t.takeDamage(1),console.log(`Boss hit (updated), health: ${t.health}, active: ${t.isActive}`))})}function w(){C.width=b/100*400,C.setFillStyle(b>50?65280:b>25?16776960:16711680)}function V(){g=Math.max(0,Math.min(100,g)),A.height=g/100*200,A.setFillStyle(g>=100?16711935:255)}function k(t){switch(p=t,T.setText("Blaster: "+X(t)),t){case 1:i.setFrame(0);break;case 2:i.setFrame(1);break;case 3:i.setFrame(2);break;case 4:i.setFrame(3);break}}function G(){let t=-500;if(p===1)c.create(i.x,i.y-25,"bullet").setVelocityY(t);else if(p===2){let e=c.create(i.x-10,i.y-25,"bullet"),s=c.create(i.x+10,i.y-25,"bullet");e.setVelocityY(t),s.setVelocityY(t)}else if(p===3)c.create(i.x-15,i.y,"bullet").setVelocityY(t),c.create(i.x,i.y,"bullet").setVelocityY(t),c.create(i.x+15,i.y,"bullet").setVelocityY(t);else if(p===4){let e=c.create(i.x-20,i.y-25,"bullet"),s=c.create(i.x-10,i.y-25,"bullet"),o=c.create(i.x,i.y-25,"bullet"),h=c.create(i.x+10,i.y-25,"bullet"),n=c.create(i.x+20,i.y-25,"bullet");e.setVelocityY(t),s.setVelocityY(t),o.setVelocityY(t),h.setVelocityY(t),n.setVelocityY(t)}}function L(){let t=Phaser.Math.Between(50,750),e=x.create(t,0,"chedda");const s=[{scale:.096,speed:150,value:1,hits:1},{scale:.16,speed:120,value:4,hits:2},{scale:.224,speed:90,value:7,hits:4},{scale:.32,speed:60,value:10,hits:5}],o=Phaser.Math.RND.pick(s);e.setScale(o.scale),e.setVelocityY(o.speed),e.setAngularVelocity(Phaser.Math.Between(-200,200)),e.value=o.value,e.hitsRemaining=o.hits,e.originalSpeed=o.speed,e.currentSpeed=o.speed,e.slowTimer=null}function N(){let t=Phaser.Math.Between(50,750),e=[];p===1?e.push("sr_badge"):p===2&&e.push("cr_badge"),b<50&&Phaser.Math.Between(0,1)===0&&e.push("health_badge"),e.length!==0&&S.create(t,0,Phaser.Math.RND.pick(e)).setScale(.5).setVelocityY(100)}function F(t,e){t.destroy(),e.hitsRemaining-=1,e.slowTimer?e.slowTimer.remove():e.currentSpeed=e.originalSpeed*.5,e.setVelocityY(e.currentSpeed),e.slowTimer=this.time.delayedCall(200,()=>{e.currentSpeed=e.originalSpeed,e.setVelocityY(e.currentSpeed),e.slowTimer=null},[],this),e.hitsRemaining<=0&&(B+=e.value,p!==4&&(g+=Math.ceil(e.value*2),V()),D.setText("$CHEDDA: "+B),e.slowTimer&&e.slowTimer.remove(),e.destroy())}function I(t,e){this.health-=e.value*2,w(),e.destroy()}function W(t,e){e.texture.key==="sr_badge"&&p<3?k(2):e.texture.key==="cr_badge"&&p<4?k(3):e.texture.key==="health_badge"&&(this.health+=20,w()),e.destroy()}function X(t){switch(t){case 1:return"OG Single";case 2:return"SR Double";case 3:return"CR Triple";case 4:return"CL Mega";default:return"OG Single"}}
